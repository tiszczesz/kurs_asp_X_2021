// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMVC_Cake.Data;

#nullable disable

namespace WebMVC_Cake.Migrations
{
    [DbContext(typeof(CupcakeContext))]
    partial class CupcakeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebMVC_Cake.Models.Bakery", b =>
                {
                    b.Property<int>("BakeryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BakeryId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BakeryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BakeryId");

                    b.ToTable("Bakeries");

                    b.HasData(
                        new
                        {
                            BakeryId = 1,
                            Address = "Nowa Hata 32-445 ul. Błotna 34",
                            BakeryName = "Ekstra wypieki",
                            Quantity = 8
                        },
                        new
                        {
                            BakeryId = 2,
                            Address = "Toruń 62-666 ul. Mogilska 34",
                            BakeryName = "Babunia ciastka",
                            Quantity = 4
                        },
                        new
                        {
                            BakeryId = 3,
                            Address = "Warszawa 45-444 ul. Błotna 34",
                            BakeryName = "Ciastka na wynos",
                            Quantity = 3
                        },
                        new
                        {
                            BakeryId = 4,
                            Address = "Kraków 31-555 ul. Długa 34",
                            BakeryName = "Dumiecki LTD",
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("WebMVC_Cake.Models.Cupcake", b =>
                {
                    b.Property<int>("CupcakeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CupcakeId"), 1L, 1);

                    b.Property<int?>("BakeryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("CaloricValue")
                        .HasColumnType("int");

                    b.Property<int>("CupcakeType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GlutenFree")
                        .HasColumnType("bit");

                    b.Property<string>("ImageMimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PhotoFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CupcakeId");

                    b.HasIndex("BakeryId");

                    b.ToTable("Cupcakes");

                    b.HasData(
                        new
                        {
                            CupcakeId = 1,
                            BakeryId = 1,
                            CaloricValue = 260,
                            CupcakeType = 0,
                            Description = "Waniliowe pyszne ...",
                            GlutenFree = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "birthday-cupcake.jpg",
                            Price = 2.5m
                        },
                        new
                        {
                            CupcakeId = 2,
                            BakeryId = 2,
                            CaloricValue = 195,
                            CupcakeType = 2,
                            Description = "Chocolate cupcake with caramel filling and chocolate butter cream",
                            GlutenFree = false,
                            ImageMimeType = "image/jpeg",
                            ImageName = "chocolate-cupcake.jpg",
                            Price = 3.2m
                        },
                        new
                        {
                            CupcakeId = 3,
                            BakeryId = 3,
                            CaloricValue = 295,
                            CupcakeType = 3,
                            Description = "Chocolate cupcake with straberry cream filling",
                            GlutenFree = false,
                            ImageMimeType = "image/jpeg",
                            ImageName = "pink-cupcake.jpg",
                            Price = 4m
                        },
                        new
                        {
                            CupcakeId = 4,
                            BakeryId = 4,
                            CaloricValue = 360,
                            CupcakeType = 1,
                            Description = "Vanilla cupcake with butter cream",
                            GlutenFree = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "turquoise-cupcake.jpg",
                            Price = 1.5m
                        },
                        new
                        {
                            CupcakeId = 5,
                            BakeryId = 4,
                            CaloricValue = 250,
                            CupcakeType = 1,
                            Description = "Przepyszne ciastko",
                            GlutenFree = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "cupcakes-cover.jpg",
                            Price = 4.5m
                        });
                });

            modelBuilder.Entity("WebMVC_Cake.Models.Cupcake", b =>
                {
                    b.HasOne("WebMVC_Cake.Models.Bakery", "Bakery")
                        .WithMany("Cupcakes")
                        .HasForeignKey("BakeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bakery");
                });

            modelBuilder.Entity("WebMVC_Cake.Models.Bakery", b =>
                {
                    b.Navigation("Cupcakes");
                });
#pragma warning restore 612, 618
        }
    }
}
